name: Deploy Resources

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  terraform_validate:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan

    - name: Upload plan output
      uses: actions/upload-artifact@v3
      with:
        name: terraform-plan-output
        path: terraform.plan

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    outputs:
      instance_ip: ${{ steps.ip_output.outputs.instance_ip }}
    

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Get Instance IP from Terraform output
      if: always()
      id: ip_output
      run: echo "instance_ip=$(terraform output -raw instance_ip)" >> $GITHUB_OUTPUT
      
  ansible:
    runs-on: ubuntu-latest
    needs: terraform_apply
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v3
        with:
          playbook: ansible/playbook.yml
          inventory: |
            [all]
            ${{ needs.terraform_apply.outputs.instance_ip }}  # Accessing instance IP from terraform_apply
          key: ${{ secrets.PRIVATE_KEY_PEM }}  # Ensure your private key is stored in GitHub secrets
          options: |
            --extra-vars "ansible_ssh_user=azureuser instance_ip=${{ needs.terraform_apply.outputs.instance_ip }}"

